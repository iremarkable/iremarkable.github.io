<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[LiuTop的博客]]></title>
  <link href="http://iremarkable.github.io/atom.xml" rel="self"/>
  <link href="http://iremarkable.github.io/"/>
  <updated>2015-07-20T19:30:51+08:00</updated>
  <id>http://iremarkable.github.io/</id>
  <author>
    <name><![CDATA[Liutop.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git生成SSH Key]]></title>
    <link href="http://iremarkable.github.io/blog/20150720/gitsheng-cheng-ssh-key.html"/>
    <updated>2015-07-20T10:37:02+08:00</updated>
    <id>http://iremarkable.github.io/blog/20150720/gitsheng-cheng-ssh-key</id>
    <content type="html"><![CDATA[<h3 id="mac-osx-git-ssh-key">生成 Mac OSX Git SSH Key</h3>

<p><a href="https://help.github.com/articles/generating-ssh-keys">翻译自https://help.github.com/articles/generating-ssh-keys/</a></p>

<h3 id="ssh-key">步骤 1 检查SSH Key</h3>

<p>首先，我们需要检查SSH Key是否在电脑上存在。打开命令行工具，输入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ls -al ~/.ssh</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>检查所列目录是否存在一个public SSH Key.  默认的情况，public ssh key 是以下几种:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">id_dsa.pub
</span><span class="line">id_ecdsa.pub
</span><span class="line">id_ed25519.pub
</span><span class="line">id_rsa.pub</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果你看到存在一对公有，私有的key(比如  id_rsa.pub and id_rsa )，就表明您曾经连接过Github, 这时候你可以选择跳过 第二步直接操作第三步</p>

<p>如果报错，也不用担心，我们将在第二步创建</p>

<h3 id="ssh-key-1">步骤 2  生成新的 SSH key</h3>

<p>命令行输入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><em>然后接着如下操作:</em></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> Enter file in which to save the key (/Users/you/.ssh/id_rsa):    //您直接回车就可以了
</span><span class="line"> Enter passphrase (empty for no passphrase):  //输入您的密码
</span><span class="line"> Enter same passphrase again:  //再次输入您的密码</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><em>完成后将出现如下输出：</em></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> Your identification has been saved in /Users/you/.ssh/id_rsa.
</span><span class="line"> Your public key has been saved in /Users/you/.ssh/id_rsa.pub.
</span><span class="line"> The key fingerprint is:
</span><span class="line"> 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="key--ssh-agent">步骤 3  添加 key 到 ssh-agent</h3>

<p><em>命令行输入：</em></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">eval "$(ssh-agent -s)"
</span><span class="line">ssh-add ~/.ssh/id_rsa</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="ssh-key-">步骤 4 添加你的 SSH key 到你的账户</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这样生成的key您就完成了拷贝，然后您在添加到您的Github账户中</p>

<h3 id="section">步骤 5  测试连接</h3>
<p><em>打开命令行输入：</em></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ssh -T git@github.com</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当出现：Hi username! You’ve successfully authenticated, but GitHub does not
 provide shell access. 就表示一切操作成功啦！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[古拉格读书笔记]]></title>
    <link href="http://iremarkable.github.io/blog/20150719/gu-la-ge-du-shu-bi-ji.html"/>
    <updated>2015-07-19T19:17:08+08:00</updated>
    <id>http://iremarkable.github.io/blog/20150719/gu-la-ge-du-shu-bi-ji</id>
    <content type="html"><![CDATA[<h2 id="section">古拉格   一部历史 读书笔记</h2>

<p><img src="http://img3.douban.com/lpic/s26016760.jpg" alt="古拉格" /></p>

<p><br /></p>

<p><strong>最近断断续续的在读一本书–<code>古拉格一部历史</code>,该书概述的是苏联1917至1986年这长达70年‘劳改营’残酷历史的回忆。这是一部讲述苏联的著作，我本人对苏联或者说现在的俄罗斯没有什么兴趣，但是当我读了个别的段落后，它的真实让我看到了现实，所以我决定好好读一读</strong></p>

<p><strong>下面将不定期的记录我对该书的认识</strong></p>

<h3 id="section-1">第一章: 布尔什维克统治初期</h3>

<p>第一次革命，1917年沙皇俄国尼古拉二世退位，临时政府成立。在随着旧政权的奔溃而出现的真空里，现有的一切政治和政策方案，无论是大胆想象的还是还是精心构思的，全都漫无目的和用途地横空出世了。</p>

<p>在这权利交接的真空里，列宁发动第二次革命—十月革命。在列宁的鼓动下，暴徒洗劫了冬宫，政变成功，成立了苏维埃俄国。</p>

<p>尽管布尔什维克夺取了政权，但是对于初次掌管一个国家的政党来说，布尔什维克还没有准备好。为了适应当时需要，它建立了一党制国家。为了巩固政权，布尔什维克开始在全苏联开始大肆捕杀就政权，反对派人士。俄国的腥风血雨开始了。</p>

<p>逮捕了大量的孟什维克，无政府，社会革命人，为了“改造”这些人，苏联的第一批劳动集中营诞生了。</p>

<p>为了更有理由巩固政权，逮捕他们的敌人，列宁定义，苏维埃产生了新的敌人—“阶级敌人”。
要定罪，先定义。</p>

<p>苏联的阶级敌人的定义： 反对革命，并且公开或者隐藏的企图破坏革命。阶级敌人比普通犯罪更加难以识别，难以改造，因此，对待阶级敌人使用更加严厉的手段惩罚。</p>

<p>但是，苏联的定义并没有说清楚什么是阶级敌人是什么样，所以这给逮捕所谓的阶级敌人大大扩大了范围。</p>

<p>为什么苏联那么久没有清晰的什么才是阶级敌人呢？！
好好思考吧。</p>

<p>有感！</p>

<p>由于大量逮捕，很快造成苏联监狱人满为患。所以集中营应生产出，随之其管理组织也诞生了—契卡。</p>

<p>契卡的权利非同一般，它是苏联的“剑与盾”，不对苏联政府及其他部门负责。它游离与“正常“的法律社会在外。</p>

<p>有感！</p>

<p>契卡执行都是列宁的特别任务，全力贯彻列宁的红色恐怖。</p>

<p>这一切对于苏联来说都是全新的，它会不断的制造问题，然后解决问题。</p>

<p>人满为患，管理混乱，信息泄漏等等给契卡带来不少问题，因而1923年春天，一种解决办法发明出来了：索洛维茨基集中营。</p>

<p><br /></p>

<h3 id="section-2">第二章: ‘古拉格’的第一个劳动改造营</h3>

<h3 id="section-3">第三章: 一九二九年：重大转折</h3>

<h3 id="section-4">第四章: 白海运河</h3>

<h3 id="section-5">第五章: 扩大劳改营</h3>

<h3 id="section-6">第六章: 大清洗及其后果</h3>

<h3 id="section-7">第七章: 逮捕</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Github+Octopress搭建博客]]></title>
    <link href="http://iremarkable.github.io/blog/20150718/shi-yong-github-plus-octopressda-jian-bo-ke.html"/>
    <updated>2015-07-18T16:58:03+08:00</updated>
    <id>http://iremarkable.github.io/blog/20150718/shi-yong-github-plus-octopressda-jian-bo-ke</id>
    <content type="html"><![CDATA[<h2 id="macgitoctopressmac">折腾一天半终于把Mac环境的Git+Octopress搭建好了，现在简要的说下在Mac上搭建步骤.</h2>

<p><em>提示：配置环境的时候，由于被强的原因，有的软件下载不下来，请使用VPN</em></p>

<h3 id="section">(1) 环境配置</h3>

<h3 id="git">1.1 安装Git</h3>
<p>安装Git很简单，下载完成后安装即可 <a href="http://git-scm.com/">下载地址</a></p>

<h3 id="ruby">1.2 安装Ruby</h3>

<p>安装Ruby不像Git那么简单，需要借助<a href="http://brew.sh/index_zh-cn.html">HomeBrew</a>来安装</p>

<ul>
  <li>首先安装HomeBrew</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"  
</span><span class="line">brew doctor  //这个是用来诊断的，当出现Your system is ready to brew.就表示OK了。</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>安装Ruby</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class="line">或者安装指定的稳定版本：
</span><span class="line">rvm install 2.0.0
</span><span class="line">rvm use 2.0.0	
</span><span class="line">rvm rubygems latest
</span><span class="line">以上二者选一</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="octopress">(2) 安装Octopress</h3>

<ul>
  <li>2.1 安装octopress<br /></li>
</ul>

<p>首先在建立一个文件夹存放octopress，我的目录是 ~/Dev/Github.</p>

<p>执行命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd Dev/Github  //进入存放octopress的目录
</span><span class="line">git clone git://github.com/imathis/octopress.git octopress
</span><span class="line">cd octopress   //进入octopress的目录，以后的所有操作都是基于进入该目录后的操作，请注意</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>2.2 安装Bundler<br />
&gt;	这一步会出现网络问题，可以多试试几次，如果不行，请使用VPN.</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem install bundler
</span><span class="line">bundle install</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>
    <p>2.3 预览安装效果</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake preview</span></code></pre></td></tr></table></div></figure></notextile></div>
<blockquote>
  <p>然后在浏览器中打开：http://localhost:4000 就可看到效果了</p>
</blockquote>

<h3 id="section-1">(3) 发布新文章</h3>

<ul>
  <li>执行命令：</li>
</ul>

<p><code>
cd octopress
rake new_post["你的文章标题"]
  </code>
&gt; 然后会在<code>octopress/source/_posts</code>的目录下生成你命名的 markdown文件，使用 markdown编辑器编辑你要写的文章就可了</p>

<ul>
  <li>
    <p>及时预览</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake generate   //将你编写markdown文件转化为HTML
</span><span class="line">rake preview    </span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="git-1">(4) 文件提到到Git/部署</h3>
<ul>
  <li>
    <p>4.1 创建Github帐号</p>

    <p>打开<a href="http://github.com">Github</a></p>
  </li>
  <li>
    <p>4.2 创建repository</p>

    <p>命名： [your_username].github.io ,创建成功过后出现SSH地址：git@github.com:[your_username]/[your_username].github.io.git</p>
  </li>
</ul>

<blockquote>
  <p>注意不要命名成为youname.github.com的形式，这是Github之前使用的格式，现在推荐的是yourname.github.io</p>
</blockquote>

<ul>
  <li>
    <p>4.3 将本地的octopress发不到Github pages</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd octopress
</span><span class="line">rake setup_github_pages</span></code></pre></td></tr></table></div></figure></notextile></div>
<blockquote>
  <p>该步骤会提醒您输入SSH地址，就把您创建您的repository的SSH地址粘贴进入就可了</p>
</blockquote>

<ul>
  <li>
    <p>4.4 提交更新到Github</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git add .
</span><span class="line">git commit -m '您的提交备注'
</span><span class="line">git push origin source</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>每次有变动都要执行该3个命令做数据同步</p>

<ul>
  <li>
    <p>4.5 部署</p>

    <p>执行命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake generate
</span><span class="line">rake deploy
</span><span class="line">或者
</span><span class="line">rake gen_deploy</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><em>小技巧：rake gen_deploy 等同于 rake generate 和 rake deploy, 是不是很方便呢</em></p>

<h3 id="sudo">如果出现权限的问题，请在命令前加上sudo</h3>

<h3 id="section-2">参考:</h3>
<ol>
  <li><a href="http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/">http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/</a></li>
  <li><a href="http://williamherry.com/blog/2012/07/20/octopress-setup/">http://williamherry.com/blog/2012/07/20/octopress-setup/</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[欢迎]]></title>
    <link href="http://iremarkable.github.io/blog/20150718/huan-ying.html"/>
    <updated>2015-07-18T16:17:30+08:00</updated>
    <id>http://iremarkable.github.io/blog/20150718/huan-ying</id>
    <content type="html"><![CDATA[<h3 id="octopress">开启我的Octopress之旅</h3>

<h4 id="gitoctopressgithuboctopress">由于各种原因，对git不熟悉，网络被强等等各种原因，花了一天半的时间终于把octopress配置好了，并且购买了域名。Github+Octopress正式之旅开始了。</h4>

<h3 id="section">写科技类的博客就是对自己工作的中发现的问题和感想的实时反馈。不难，不过难在：</h3>
<ol>
  <li>啥事都贵在坚持，坚持不容易，因为工作一忙了，身边的各种事情一多了，就很难坚持下去了。所以，给自己立个志，每两至少一篇。</li>
  <li>犹豫程序员不是专门的写手，在写作上的文笔水平多数不是很好，如果要写一篇大家能够看的懂，看得清楚明白的文章，还是需要话费比较的大的经历去修改的，这是第二难。</li>
  <li>最后一个就是能不能及时发现的有价值的想法及时记录，不一定网上存在，甚至比你写的更好的就没有价值了，至少对你是新的，人的成长都是从小白开始的嘛，所以对个人的成长还是比较有帮助的</li>
</ol>

<p>首先谢谢William <a href="http://williamherry.com/blog/2012/07/20/octopress-setup/">http://williamherry.com/blog/2012/07/20/octopress-setup/</a>！</p>

<h4 id="blog-httpwilliamherrycomblogarchives">推荐一下的他的blog: <a href="http://williamherry.com/blog/archives/">http://williamherry.com/blog/archives/</a></h4>
]]></content>
  </entry>
  
</feed>
